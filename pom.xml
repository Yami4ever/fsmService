<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.chinaway.boss</groupId>
	<artifactId>fsmservice</artifactId>
	<packaging>jar</packaging>
	<version>1.0</version>
	<name>FSM RESTful</name>
	<url>http://www.g7.com.cn</url>
	<description> FSM (Finite-state machine)</description>

	<properties>
		<java.version>1.8</java.version>
		<jersey.version>2.22.2</jersey.version>
		<slf4j.version>1.7.7</slf4j.version>
		<logback.version>1.1.2</logback.version>
		<mysql.connector.version>5.1.38</mysql.connector.version>
		<c3p0.version>0.9.1.2</c3p0.version>
		<junit.version>4.12</junit.version>
		<lombok.version>1.16.6</lombok.version>
		<maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
		<timestamp>${maven.build.timestamp}</timestamp>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
		</dependency>

		<!-- Dependencies for Jersey -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<!-- if your container implements Servlet API older than 3.0, use "jersey-container-servlet-core" -->
			<artifactId>jersey-container-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.connectors</groupId>
			<artifactId>jersey-grizzly-connector</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-grizzly2-http</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<!-- POJO json for jersey -->
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<!-- Required only when you are using JAX-RS Client -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>${c3p0.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.connector.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>2.10.1</version>
		</dependency>
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.9</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.2</version>
		</dependency>
		<!-- <dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.0</version>
		</dependency> -->
		
	</dependencies>

	<build>
		<finalName>fsmservice</finalName>
		<sourceDirectory>src/main/java</sourceDirectory>
		<resources>
			<!-- 控制资源文件的拷贝 -->
			<resource>
				<directory>src/main/resources</directory>
				<!-- <targetPath>${project.build.directory}/conf</targetPath> -->
				<targetPath>${project.build.directory}/classes</targetPath>
			</resource>
		</resources>
		
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<enconding>utf8</enconding>
				</configuration>
			</plugin>
			
			<!-- 多平台启动支持 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.10</version>
				<executions>
					<execution>
						<id>generate-jsw-scripts</id>
						<phase>package</phase>
						<goals>
							<goal>generate-daemons</goal>
						</goals>
						
						<configuration>
							<repositoryLayout>flat</repositoryLayout>
							<configurationDirectory>conf</configurationDirectory>
							<includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
							<useWildcardClassPath>true</useWildcardClassPath>
							<daemons>
								<daemon>
									<id>fsmservice</id>
									<mainClass>com.chinaway.boss.main.RestfulMain</mainClass>
									<commandLineArguments>
										<commandLineArgument>start</commandLineArgument>
									</commandLineArguments>
									<platforms>
										<platform>jsw</platform>
									</platforms>
									<jvmSettings>
										<initialMemorySize>128M</initialMemorySize>
                						<maxStackSize>128M</maxStackSize>
										<maxMemorySize>2048M</maxMemorySize>
										<!-- 启动内存 -->
										<!-- <extraArguments>
											TODO
											<extraArgument>-server </extraArgument>
											<extraArgument>-XX:MaxPermSize=64M</extraArgument>
											<extraArgument>-XX:+AggressiveOpts</extraArgument>
											<extraArgument>-XX:MaxDirectMemorySize=2G</extraArgument>
										</extraArguments> -->
									</jvmSettings>
									<generatorConfigurations>
										<generatorConfiguration>
											<generator>jsw</generator>
											<includes>
												<include>linux-x86-32</include>
												<include>linux-x86-64</include>
											</includes>
											
											<configuration>
												<property>
													<!-- 设置首先加载的classpath -->
													<name>configuration.directory.in.classpath.first</name>
													<value>conf</value>
												</property>
												<property>
		                                            <name>wrapper.ping.timeout</name>
		                                            <value>120</value>
		                                        </property>
												<property>
													<name>set.default.REPO_DIR</name>
													<value>lib</value>
												</property>
												<property>
													<name>wrapper.logfile</name>
													<value>logs/wrapper.log</value>
												</property>
											</configuration>
										</generatorConfiguration>
									</generatorConfigurations>
								</daemon>
							</daemons>
						</configuration>
						
						
					</execution>
				</executions>
				
			</plugin>
			
			<!-- 打包插件 -->
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-assembly-plugin</artifactId>
			    <version>2.4</version>
			    <configuration>
			        <descriptors>
			            <descriptor>src/main/assembly/assembly-linux.xml</descriptor>
			        </descriptors>
			    </configuration>
			    <executions>
			        <execution>
			            <id>make-assembly</id>
			            <phase>package</phase>
			            <goals>
			                <goal>single</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>
			
		</plugins>
	</build>
</project>
